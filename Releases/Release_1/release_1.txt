class Point:

  Atributos:
    - X: int
    - y: int

  Métodos:
    + constructor(a: int, b: int)
      {
        this.X = a;
        this.Y = b;
      }

    + getPoint(): (int, int)
      {
        return (this.X, this.Y);
      }

    + quad(): int
      {
        if (this.X == 0 && this.Y == 0)
        {
          return 0;
        }
        else if (this.X > 0)
        {
          if (this.Y >= 0)
            return 1;
          else if (this.Y < 0)
            return 4;
        }
        else if (this.X < 0)
        {
          if (this.Y >= 0)
            return 2;
          if (this.Y < 0)
            return 3;
        }
      }
    
    + moveToOrigin(): void
    {
      this.X = 0;
      this.Y = 0;
    }

    + isOnOrigin(): bool
    {
      return this.X == 0 && this.Y == 0;
    }

class Line(Point):

  Atributos:
    - start: Point
    - end: Point;

  Métodos:
    + constructor(a: Point, b: Point)
    {
      this.start = new Point(a.X, a.Y);
      this.end = new Point(b.X, b.Y);
    }

    + arePointsEqual(): bool
    {
      return this.start == this.end;
    }

    + length(): float
    {
      if (this.arePointsEqual())
      {
        return 0;
      }
      else
      {
        float length = sqrt(((this.end.X - this.start.X)**2) + ((this.end.Y - this.start.Y)**2))

        return length;
      }
    }

class Circle(Point):

  Atributos:
    - R: float
    - center: Point

  Métodos:
    + constructor(a: Point, b: float)
    {
      this.center = new Point(a.X, a.Y);
      this.R = b;
    }

    + area(): float
    {
      float area = 3.14 * (this.R**2);

      return area;
    }

    + circumference(): float
    {
      float circumference = 2 * 3.14 * this.R;

      return circumference;
    }

    + diameter(): float
    {
      float diameter = this.R * 2;

      return diameter;
    }

class Square(Point):

  Atributos:
    - side: float
    - origin: Point

  Métodos:
    + constructor(a: Point, b: float)
    {
      this.origin = new Point(a.X, a.Y);
      this.side = b;
    }

    + area(): float
    {
      float area = this.side**2;

      return area;
    }

    + perimeter(): float
    {
      float perimeter = this.side * 4;

      return perimeter;
    }

    + diagonal(): float
    {
      float diagonal = this.side * sqrt(2);

      return diagonal;
    }



